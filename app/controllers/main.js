/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['controllers/main.js']) {
  _$jscoverage['controllers/main.js'] = [];
  _$jscoverage['controllers/main.js'][18] = 0;
  _$jscoverage['controllers/main.js'][22] = 0;
  _$jscoverage['controllers/main.js'][24] = 0;
  _$jscoverage['controllers/main.js'][25] = 0;
  _$jscoverage['controllers/main.js'][27] = 0;
  _$jscoverage['controllers/main.js'][28] = 0;
  _$jscoverage['controllers/main.js'][29] = 0;
  _$jscoverage['controllers/main.js'][31] = 0;
  _$jscoverage['controllers/main.js'][32] = 0;
  _$jscoverage['controllers/main.js'][34] = 0;
  _$jscoverage['controllers/main.js'][35] = 0;
  _$jscoverage['controllers/main.js'][36] = 0;
  _$jscoverage['controllers/main.js'][37] = 0;
  _$jscoverage['controllers/main.js'][39] = 0;
  _$jscoverage['controllers/main.js'][40] = 0;
  _$jscoverage['controllers/main.js'][41] = 0;
  _$jscoverage['controllers/main.js'][42] = 0;
  _$jscoverage['controllers/main.js'][43] = 0;
  _$jscoverage['controllers/main.js'][44] = 0;
  _$jscoverage['controllers/main.js'][45] = 0;
  _$jscoverage['controllers/main.js'][46] = 0;
  _$jscoverage['controllers/main.js'][48] = 0;
  _$jscoverage['controllers/main.js'][49] = 0;
  _$jscoverage['controllers/main.js'][56] = 0;
  _$jscoverage['controllers/main.js'][59] = 0;
  _$jscoverage['controllers/main.js'][60] = 0;
  _$jscoverage['controllers/main.js'][64] = 0;
  _$jscoverage['controllers/main.js'][70] = 0;
  _$jscoverage['controllers/main.js'][71] = 0;
  _$jscoverage['controllers/main.js'][72] = 0;
  _$jscoverage['controllers/main.js'][73] = 0;
  _$jscoverage['controllers/main.js'][90] = 0;
}
_$jscoverage['controllers/main.js'][18]++;
var strategies = require("../helpers/passport/strategies"), authTypes = geddy.mixin(strategies, {local: {name: "local account"}});
_$jscoverage['controllers/main.js'][22]++;
var Main = (function () {
  _$jscoverage['controllers/main.js'][24]++;
  this.index = (function (req, resp, params) {
  _$jscoverage['controllers/main.js'][25]++;
  var self = this;
  _$jscoverage['controllers/main.js'][27]++;
  var localParams = params;
  _$jscoverage['controllers/main.js'][28]++;
  if (! localParams.errCode) {
    _$jscoverage['controllers/main.js'][29]++;
    localParams.errCode = 0;
  }
  _$jscoverage['controllers/main.js'][31]++;
  if (! localParams.methodType) {
    _$jscoverage['controllers/main.js'][32]++;
    localParams.methodType = 0;
  }
  _$jscoverage['controllers/main.js'][34]++;
  console.log("params.methodType =" + params.methodType + " and params.errCode =" + params.errCode);
  _$jscoverage['controllers/main.js'][35]++;
  console.log("this.session.get('userId') = " + this.session.get("userId"));
  _$jscoverage['controllers/main.js'][36]++;
  if (! this.session.get("userId")) {
    _$jscoverage['controllers/main.js'][37]++;
    this.session.set("userId", 0);
  }
  _$jscoverage['controllers/main.js'][39]++;
  geddy.model.User.first({id: this.session.get("userId")}, (function (err, data) {
  _$jscoverage['controllers/main.js'][40]++;
  var params = localParams;
  _$jscoverage['controllers/main.js'][41]++;
  params.user = null;
  _$jscoverage['controllers/main.js'][42]++;
  params.authType = null;
  _$jscoverage['controllers/main.js'][43]++;
  if (data) {
    _$jscoverage['controllers/main.js'][44]++;
    console.log("Got User: " + data);
    _$jscoverage['controllers/main.js'][45]++;
    params.user = data;
    _$jscoverage['controllers/main.js'][46]++;
    params.authType = authTypes[self.session.get("authType")].name;
  }
  _$jscoverage['controllers/main.js'][48]++;
  console.log("Params.User = " + params.user);
  _$jscoverage['controllers/main.js'][49]++;
  self.respond(params, {format: "html", template: "app/views/main/index"});
}));
});
  _$jscoverage['controllers/main.js'][56]++;
  this.login = (function (req, resp, params) {
  _$jscoverage['controllers/main.js'][59]++;
  if (! params.errCode) {
    _$jscoverage['controllers/main.js'][60]++;
    params.errCode = 0;
  }
  _$jscoverage['controllers/main.js'][64]++;
  this.respond(params, {format: "html", template: "app/views/main/login"});
});
  _$jscoverage['controllers/main.js'][70]++;
  this.logout = (function (req, resp, params) {
  _$jscoverage['controllers/main.js'][71]++;
  this.session.unset("userId");
  _$jscoverage['controllers/main.js'][72]++;
  this.session.unset("authType");
  _$jscoverage['controllers/main.js'][73]++;
  this.respond(params, {format: "html", template: "app/views/main/logout"});
});
});
_$jscoverage['controllers/main.js'][90]++;
exports.Main = Main;
_$jscoverage['controllers/main.js'].source = ["/*"," * Geddy JavaScript Web development framework"," * Copyright 2112 Matthew Eernisse (mde@fleegix.org)"," *"," * Licensed under the Apache License, Version 2.0 (the \"License\");"," * you may not use this file except in compliance with the License."," * You may obtain a copy of the License at"," *"," *         http://www.apache.org/licenses/LICENSE-2.0"," *"," * Unless required by applicable law or agreed to in writing, software"," * distributed under the License is distributed on an \"AS IS\" BASIS,"," * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."," * See the License for the specific language governing permissions and"," * limitations under the License."," *","*/","var strategies = require('../helpers/passport/strategies')","  , authTypes = geddy.mixin(strategies, {local: {name: 'local account'}});","// var runTests = require('../../test/runTests.js');","","var Main = function () {","","  this.index = function (req, resp, params) {","    var self = this;","","    var localParams = params;","    if (!localParams.errCode){","      localParams.errCode = 0;","    }","    if (!localParams.methodType){","      localParams.methodType = 0;","    }","    console.log(\"params.methodType =\" + params.methodType + \" and params.errCode =\" + params.errCode);","    console.log(\"this.session.get('userId') = \" + this.session.get('userId'));","    if (!this.session.get('userId')){","      this.session.set('userId', 0);","    }","    geddy.model.User.first({id: this.session.get('userId')}, function (err, data) {","      var params = localParams;","      params.user = null;","      params.authType = null;","      if (data) {","        console.log(\"Got User: \" + data);","        params.user = data;","        params.authType = authTypes[self.session.get('authType')].name;","      }","      console.log(\"Params.User = \" + params.user);","      self.respond(params, {","        format: 'html'","      , template: 'app/views/main/index'","      });","    });","  };","","  this.login = function (req, resp, params) {","    //Check if redirected with errCode,","    //Otherwise it is 0","    if (!params.errCode){","      params.errCode = 0;","    }","    //If errCode = 1, this means we successfully created an account","","    this.respond(params, {","      format: 'html'","    , template: 'app/views/main/login'","    });","  };","","  this.logout = function (req, resp, params) {","    this.session.unset('userId');","    this.session.unset('authType');","    this.respond(params, {","      format: 'html'","    , template: 'app/views/main/logout'","    });","  };","","","  // this.unitTests = function (req, resp, params) {","  //   var self = this;","  //   runTests(function (answerDict) {","  //     console.log(\"responding from unitTests\");","  //     self.respond(answerDict, {format: 'json'});","  //   });","  // };","","};","","exports.Main = Main;","",""];
